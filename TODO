at renommage en 'SoCo'
ok réécrire les appels à la config
ok mettre le nom de l'institution dans la config (pour mettre dans les mails et sur l'interface)
at traduction de l'interface

ok procédure d'installation
ok installation en production
  ok configuration PostGreSQL
  ok intégrer avec Apache
  ok intégrer TLS et tester
* jeux de données d'initialisation

ok essayer avec Postgresql
* nouveau script de migration
  ec toujours avec SQLAlchemy-Migrate
  ** mais comment exporter les migrations en SQL ?

ok modèle de données
  ok revoir la relation entre Inscription et Personne

ok amélioration formulaires CRUD
  ok traitement du logo de l'événément
    at default en cascade
  ** prévoir un petit éditeur de texte, pour le résumé (?)
ok visualiser les inscrits
ok pouvoir ajouter une inscription de l'intérieur de l'appli

at page publique d'inscription à un colloque (sans JS)
  ok champs -> pb des libellés variables, avec le style
  ok présentation de la page
  ok affichage du logo à la bonne taille (thumbnail)
  ok éviter les doublons d'inscription (et de personne)
  ec raffiner l'information de l'utilisateur, notamment cas doublon
   *** voir quand il n'y a pas javascript
  ** prévoir un CAPTCHA
  ok enregistrement des lignes du badge dans la table
  ok redirection en fin de page
  ok gérer les dates d'inscription (ouverture et clôture)

at page publique d'inscription à un colloque (partie AngularJS)
  ok champs ordinaires
  ok affichage dynamique du badge
    ok nom en majuscules, prénom capitalisé
  ok création des 2 champs pour le badge
  ok éviter les doublons (Ajax)
    ok réduire/améliorer les messages sur la page
    ok envoi du mail de vérification : POST sur URL REST allant vers une
    ok fonction située dans models
    ok envoi effectif du mail
    ok raffiner la comparaison du nom et du prénom
    ** CAPTCHA (visualcaptcha)
  ok soumission du formulaire
    ok bug token CSRF
    ok interdire la soumission si erreur détectée par le JS : doublon email
    ok enregistrer les réponses aux questions supplémentaires
    at vérifier le viewport et autres (smartphones)
    ok sortie du formulaire

ok envois de mail -> evt ajouter threading (mega tutorial miguel)
  at encoding latin-1 pour + de sûreté ?

ok API Flask-Restful
  ok brider l'accès aux données personnelles
  ok faire passer l'envoi d'un mail pour vérification de la personne

ok page de formulaire nouveau colloque
  ok formulaire nouveau colloque
  ok scinder en 2*socoApp la page JS (soco d'un côté, suivi et newevt de l'autre)
  ok champs
  ok mise en œuvre pickadate
  ok calculs croisés de dates min et max
  ** affichage récap avant soumission
  ok soumission (y compris redirection et prévoir les erreurs d'intégrité)
  ok lien depuis la page suivi_index
  ok intégration du code des champs pickadate
  ok dynamisation du champ texte_restauration_1
  ec inscription jour par jour
  at nouvelles questions libres
  at URL du colloque
  ok on voudrait que le texte par défaut s'efface, sur la question supplémentaire
  ok mettre des bulles pour la description des champs : angular-tooltips

ok affichage de la page de suivi (complète pour le secrétariat)
  ok tableau web
  ok tableau CSV
  ** tableau Excel ou Calc
  ok liste de mails
  ok badges
  at restreindre l'accès aux listes de mails et aux badges (uniquement secrétariat)
  ok émargement
  ok présents
  ec améliorer la gestion des erreurs d'encodage (texenv genere_pdf)

ec interface de gestion (du formulaire) plus diversifiée
  ok page unique pour les organisateurs
    ok inclure les événements sans inscriptions
  ok changement de la date de clôture
    ok répercuter la nouvelle date sur la page suivi_index
    ok améliorer le texte du mail envoyé
    at le champ pickadate devrait être positionné sur la date de clôture actuelle
    ** essayer angular-datepicker ?
  ec changement titre, sous-titre, lieu, date de fin
  ok ce qui amène à revoir l'accès à l'issue du login
  * ajout inscriptions en masse (CSV ou lignes multiples)

ok revenir à LDAP/login
  ok autres méthodes d'authentification
  ok page de création d'un utilisateur
  ec routes et redirections
  ok raffiner les autorisations (rôles)
     (une organisatrice peut toucher seulement ses événements)
  ok aller chercher le nom et le prénom de la personne qui se connecte (LDAP)
  -> at logout automatique (timeout)

* tests unitaires

at ajout interface pour les intervants
  ** transports : horaires de trains ou avions (arrivée et départ et gare ou
   aéroport)
  ** prise de billets à la fac (pas le choix) -> configuration logicielle pour
   option remboursement
  ** nuitées sur place ? nombre seulement et de telle date à telle date
  ** ordi, vidéoproj (est-ce que vous en voulez ? VGA ou HDMI)
  ** déj pour les intervenants : tous les repas

ec ajout nb d'inscrits max avec envoi de mails
  ok ajout classe Lieu
  at relations avec objets Organisation et Evenement
  * envoi de mail (aux organisateurs) si 80%, 90%, 100%, 110%, 120%

ec ajouts pour élargir l'utilisation
  at renommage de colloque en event
  at paramétrisation des titres et autres dans les templates
  ec ajout récurrence d'un événement
  ec ajout vue planning : pour une personne, avec un token envoyé par mail

ec ajout possibilité d'autoriser une personne à voir les inscrits

ec ajout billetterie/QR-Code

* voir le formulaire que je crée
* modifier le formulaire que je visualise

at 2 logos pour 1 colloque

* rôles pour les modifications

* possibilité de modification depuis l'interface de suivi (sous-titre, lieu)

* meilleure page pour les envois groupés

* documentation : organisatrice en note de b d page
