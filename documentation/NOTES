en 3 parties, suivant les rôles :

1) Formulaire d'inscription
---------------------------
''principe : aucun rechargement de la page''

Logo personnalisé, à défaut logo de l'université

Champs fixes : nom, prénom, email, téléphone, fonction, organisation
  dont obligatoires : nom, email, organisation
Champs supplémentaires (suivant configuration du formulaire) :
  attestation de présence, repas ou cocktails...

Les lignes du badge sont composées automatiquement sous les yeux de
l'utilisateur, avec restriction à 27 caractères pour la première ligne (prénom
+ espace + nom en majuscules) et 33 pour la deuxième (fonction + tiret +
organisation) ; la coupure éventuelle se fait sur la fin du prénom
(première ligne) ou de la fonction (deuxième ligne) ; l'utilisatrice
peut corriger directement chaque ligne du badge avant soumission.

Le mail est vérifié
* s'il existe déjà dans la base, un message est affiché
* si l'utilisateur persiste, et que le nom ou le prénom est différent,
on envoie un mail avec un code pour vérifier l'adresse mail,
* si le test est positif, alors on continue le process d'inscription, en
créant une nouvelle Personne (on n'efface rien, l'ancienne Personne continue
de courir pour couvrir d'éventuelles inscriptions précédentes).

Les champs configurables, s'il y en a, sont affichés

CAPTCHA

Soumission


2) Interface de création de formulaire d'inscription
----------------------------------------------------
''destinée aux organisatrices du colloque''
''accès à l'aide du login U-PSud (LDAP)''
''accès direct à l'interface personnalisée''

* création d'un formulaire
* configuration des champs supplémentaires
* possibilité de changer la date de clôture
* visualisation des inscrits
* export en CSV, éventuellement aussi en Calc et XLS
* impressions : feuille d'émargement et liste des présents

3) Interface de suivi
---------------------
''destinée au secrétariat''

* possibilité de créer un formulaire
* modification de certaines informations
* visualisation des inscrits
* export de la liste des inscrits (CSV, évt Calc et XLS)
* export de listes d'adresses mail
* impressions : feuille d'émargement et liste des présents
* impression : badges

4) Interface d'administration
-----------------------------
''destinée aux informaticien-ne-s, évt au secrétariat''
''visualisation et édition générale de la base de données''

On peut modifier toutes informations et en particulier celles qui ne sont pas
accessibles par ailleurs :
* inscrire manuellement des gens
* modifier le badge
* supprimer des inscriptions
* etc...

5) Installation et configuration
--------------------------------
* dépendances : python3, Flask, PostGreSQL, AngularJS
* plus de précisions sur les dépendances et sur l'installation : INSTALL
* base de données : l'emploi d'autres bases de données est très possible
(quoique non encore testé) car Flask utilise la couche d'abstraction
universelle _SQLAlchemy_
* le logiciel est prévu pour fonctionner avec une authentification LDAP : pour
faire différemment, modifier le fichier ./soco/auth/models.py (méthodes
_try_login_ et _get_gecos_)
* configuration : tout est dans config.py

6) Conception
-------------
* notion d'événement : titre, sous-titre, date(s), lieu, résumé, gratuité,
uid_organisateur, id_entite_organisatrice, logo (par défaut celui de l'entité organisatrice), url
* notion de formulaire : pour pouvoir créer plusieurs formulaires pour le même événement
* notion de personne : nom, prénom, email (+ lien organisations) -> pour
identifier une personne de manière unique
* notion d'inscription : on peut vouloir par exemple un badge différent pour
des inscriptions différentes, ou donner des coordonnées différentes...
* notion d'organisation : pour localiser l'événement ; également les personnes
